/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN MatchesActionsGenerated.js PLEASE EDIT ../MatchesActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import MatchesApi from "../../../api/MatchesApi";

let actionsFunction = {

  //CRUD METHODS

  // Create matches
  createMatches: function(matches) {
    return function(dispatch) {
      return MatchesApi
        .createMatches(matches)
        .then(matches => {
          dispatch(actionsFunction.createMatchesSuccess(matches));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createMatchesSuccess: function(matches) {
    return { type: types.CREATE_MATCHES_SUCCESS, payload: matches };
  },


  // Delete matches
  deleteMatches: function(id) {
    return function(dispatch) {
      return MatchesApi
        .deleteMatches(id)
        .then(matches => {
          dispatch(actionsFunction.deleteMatchesSuccess(matches));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteMatchesSuccess: function(matches) {
    return { type: types.DELETE_MATCHES_SUCCESS, payload: matches };
  },


  // Get matches
  loadMatches: function(id) {
    return function(dispatch) {
      return MatchesApi
        .getOneMatches(id)
        .then(matches => {
          dispatch(actionsFunction.loadMatchesSuccess(matches));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadMatchesSuccess: function(matches) {
    return { type: types.GET_MATCHES_SUCCESS, payload: matches };
  },

  // Load  list
  loadMatchesList: function() {
    return function(dispatch) {
      return MatchesApi
        .getMatchesList()
        .then(list => {
          dispatch(actionsFunction.loadMatchesListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadMatchesListSuccess: function(list) {
    return { type: types.LIST_MATCHES_SUCCESS, payload: list };
  },

	
  // Save matches
  saveMatches: function(matches) {
    return function(dispatch) {
      return MatchesApi
        .saveMatches(matches)
        .then(matches => {
          dispatch(actionsFunction.saveMatchesSuccess(matches));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveMatchesSuccess: function(matches) {
    return { type: types.UPDATE_MATCHES_SUCCESS, payload: matches };
  },


};

export default actionsFunction;
