/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN LeagueActionsGenerated.js PLEASE EDIT ../LeagueActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import LeagueApi from "../../../api/LeagueApi";

let actionsFunction = {

  //CRUD METHODS

  // Create league
  createLeague: function(league) {
    return function(dispatch) {
      return LeagueApi
        .createLeague(league)
        .then(league => {
          dispatch(actionsFunction.createLeagueSuccess(league));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createLeagueSuccess: function(league) {
    return { type: types.CREATE_LEAGUE_SUCCESS, payload: league };
  },


  // Delete league
  deleteLeague: function(id) {
    return function(dispatch) {
      return LeagueApi
        .deleteLeague(id)
        .then(league => {
          dispatch(actionsFunction.deleteLeagueSuccess(league));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteLeagueSuccess: function(league) {
    return { type: types.DELETE_LEAGUE_SUCCESS, payload: league };
  },


  // Get league
  loadLeague: function(id) {
    return function(dispatch) {
      return LeagueApi
        .getOneLeague(id)
        .then(league => {
          dispatch(actionsFunction.loadLeagueSuccess(league));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadLeagueSuccess: function(league) {
    return { type: types.GET_LEAGUE_SUCCESS, payload: league };
  },

  // Load  list
  loadLeagueList: function() {
    return function(dispatch) {
      return LeagueApi
        .getLeagueList()
        .then(list => {
          dispatch(actionsFunction.loadLeagueListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadLeagueListSuccess: function(list) {
    return { type: types.LIST_LEAGUE_SUCCESS, payload: list };
  },

	
  // Save league
  saveLeague: function(league) {
    return function(dispatch) {
      return LeagueApi
        .saveLeague(league)
        .then(league => {
          dispatch(actionsFunction.saveLeagueSuccess(league));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveLeagueSuccess: function(league) {
    return { type: types.UPDATE_LEAGUE_SUCCESS, payload: league };
  },


};

export default actionsFunction;
