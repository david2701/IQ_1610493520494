/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN TeamsActionsGenerated.js PLEASE EDIT ../TeamsActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import TeamsApi from "../../../api/TeamsApi";

let actionsFunction = {

  //CRUD METHODS

  // Create teams
  createTeams: function(teams) {
    return function(dispatch) {
      return TeamsApi
        .createTeams(teams)
        .then(teams => {
          dispatch(actionsFunction.createTeamsSuccess(teams));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createTeamsSuccess: function(teams) {
    return { type: types.CREATE_TEAMS_SUCCESS, payload: teams };
  },


  // Delete teams
  deleteTeams: function(id) {
    return function(dispatch) {
      return TeamsApi
        .deleteTeams(id)
        .then(teams => {
          dispatch(actionsFunction.deleteTeamsSuccess(teams));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteTeamsSuccess: function(teams) {
    return { type: types.DELETE_TEAMS_SUCCESS, payload: teams };
  },


  // Find by name
  findByname: function(key) {
    return function(dispatch) {
      return TeamsApi
        .findByname(key)
        .then(item => {
          dispatch(actionsFunction.findBynameSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findBynameSuccess: function(item) {
    return { type: types.FINDBYNAME_TEAMS_SUCCESS, payload: item };
  },


  // Get teams
  loadTeams: function(id) {
    return function(dispatch) {
      return TeamsApi
        .getOneTeams(id)
        .then(teams => {
          dispatch(actionsFunction.loadTeamsSuccess(teams));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadTeamsSuccess: function(teams) {
    return { type: types.GET_TEAMS_SUCCESS, payload: teams };
  },

  // Load  list
  loadTeamsList: function() {
    return function(dispatch) {
      return TeamsApi
        .getTeamsList()
        .then(list => {
          dispatch(actionsFunction.loadTeamsListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadTeamsListSuccess: function(list) {
    return { type: types.LIST_TEAMS_SUCCESS, payload: list };
  },

	
  // Save teams
  saveTeams: function(teams) {
    return function(dispatch) {
      return TeamsApi
        .saveTeams(teams)
        .then(teams => {
          dispatch(actionsFunction.saveTeamsSuccess(teams));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveTeamsSuccess: function(teams) {
    return { type: types.UPDATE_TEAMS_SUCCESS, payload: teams };
  },


};

export default actionsFunction;
