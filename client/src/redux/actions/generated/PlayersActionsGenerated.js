/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN PlayersActionsGenerated.js PLEASE EDIT ../PlayersActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import PlayersApi from "../../../api/PlayersApi";

let actionsFunction = {

  //CRUD METHODS

  // Create players
  createPlayers: function(players) {
    return function(dispatch) {
      return PlayersApi
        .createPlayers(players)
        .then(players => {
          dispatch(actionsFunction.createPlayersSuccess(players));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createPlayersSuccess: function(players) {
    return { type: types.CREATE_PLAYERS_SUCCESS, payload: players };
  },


  // Delete players
  deletePlayers: function(id) {
    return function(dispatch) {
      return PlayersApi
        .deletePlayers(id)
        .then(players => {
          dispatch(actionsFunction.deletePlayersSuccess(players));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deletePlayersSuccess: function(players) {
    return { type: types.DELETE_PLAYERS_SUCCESS, payload: players };
  },


  // Find by Name
  findByName: function(key) {
    return function(dispatch) {
      return PlayersApi
        .findByName(key)
        .then(item => {
          dispatch(actionsFunction.findByNameSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findByNameSuccess: function(item) {
    return { type: types.FINDBYNAME_PLAYERS_SUCCESS, payload: item };
  },


  // Get players
  loadPlayers: function(id) {
    return function(dispatch) {
      return PlayersApi
        .getOnePlayers(id)
        .then(players => {
          dispatch(actionsFunction.loadPlayersSuccess(players));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadPlayersSuccess: function(players) {
    return { type: types.GET_PLAYERS_SUCCESS, payload: players };
  },

  // Load  list
  loadPlayersList: function() {
    return function(dispatch) {
      return PlayersApi
        .getPlayersList()
        .then(list => {
          dispatch(actionsFunction.loadPlayersListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadPlayersListSuccess: function(list) {
    return { type: types.LIST_PLAYERS_SUCCESS, payload: list };
  },

	
  // Save players
  savePlayers: function(players) {
    return function(dispatch) {
      return PlayersApi
        .savePlayers(players)
        .then(players => {
          dispatch(actionsFunction.savePlayersSuccess(players));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  savePlayersSuccess: function(players) {
    return { type: types.UPDATE_PLAYERS_SUCCESS, payload: players };
  },


};

export default actionsFunction;
